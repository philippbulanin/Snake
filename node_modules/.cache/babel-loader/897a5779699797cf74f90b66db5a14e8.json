{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./Field\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeDirection = function (event) {\n      if (event.keyCode === 37 && _this.state.direction !== \"right\") {\n        _this.setState({\n          direction: \"left\"\n        });\n      }\n\n      if (event.keyCode === 38 && _this.state.direction !== \"down\") {\n        _this.setState({\n          direction: \"up\"\n        });\n      }\n\n      if (event.keyCode === 39 && _this.state.direction !== \"left\") {\n        _this.setState({\n          direction: \"right\"\n        });\n      }\n\n      if (event.keyCode === 40 && _this.state.direction !== \"up\") {\n        _this.setState({\n          direction: \"down\"\n        });\n      }\n    };\n\n    _this.pause = function (event) {\n      console.log(event.key);\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 9,\n      headY: 5,\n      snakeLength: 1,\n      snake: {\n        x: [9],\n        y: [5],\n        length: 1\n      },\n      direction: \"\",\n      appleX: 2,\n      appleY: 1,\n      isStarted: false,\n      isWallsTransparent: false,\n      gameOver: false\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.changeDirection);\n      document.addEventListener(\"keydown\", this.pause);\n    }\n  }, {\n    key: \"generateApple\",\n    value: function generateApple() {\n      var newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n      var newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n\n      if (!this.isSnake(newAppleX, newAppleY)) {\n        this.setState({\n          appleX: newAppleX,\n          appleY: newAppleY\n        });\n      } else {\n        this.generateApple();\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      }\n\n      this.cannibal();\n\n      if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n        this.setState({\n          snakeLength: this.state.snakeLength + 1\n        });\n        this.state.snake.length = this.state.snakeLength;\n        this.generateApple();\n      }\n\n      if (this.state.isWallsTransparent) {\n        if (this.state.headX < 0) this.setState({\n          headX: this.state.xSize - 1\n        });\n        if (this.state.headX > this.state.xSize - 1) this.setState({\n          headX: 0\n        });\n        if (this.state.headY < 0) this.setState({\n          headY: this.state.ySize - 1\n        });\n        if (this.state.headY > this.state.ySize - 1) this.setState({\n          headY: 0\n        });\n      } else {\n        if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 || this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n          this.stop();\n          this.setState({\n            gameOver: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"cannibal\",\n    value: function cannibal() {\n      for (var i = 1; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === this.state.headX && this.state.snake.y[i] === this.state.headY) {\n          this.stop();\n          this.setState({\n            gameOver: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"isSnake\",\n    value: function isSnake(x, y) {\n      for (var i = 0; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"makeSnake\",\n    value: function makeSnake() {\n      for (var i = this.state.snake.length - 1; i >= 0; i--) {\n        if (i > 0) {\n          this.state.snake.x[i] = this.state.snake.x[i - 1];\n          this.state.snake.y[i] = this.state.snake.y[i - 1];\n        }\n\n        if (i === 0) {\n          this.state.snake.x[i] = this.state.headX;\n          this.state.snake.y[i] = this.state.headY;\n        }\n      }\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (this.isSnake(x, y)) {\n            if (x === this.state.headX && y === this.state.headY) {\n              className = \"head\";\n            } else {\n              className = \"snake\";\n            }\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      if (!this.state.isStarted) {\n        this.timerID = setInterval(function () {\n          _this2.setState({\n            gameOver: false,\n            field: [],\n            isStarted: true\n          });\n\n          _this2.move();\n\n          _this2.makeSnake();\n\n          _this2.drawField();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.state.isStarted) {\n        clearInterval(this.timerID);\n        this.setState({\n          isStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"setDefault\",\n    value: function setDefault() {\n      this.setState({\n        headX: 9,\n        headY: 5,\n        snakeLength: 1,\n        snake: {\n          x: [9],\n          y: [5],\n          length: 1\n        },\n        direction: \"\",\n        appleX: 2,\n        appleY: 1,\n        isStarted: false\n      });\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setDefault();\n      this.start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: this.changeDirection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Field, {\n        field: this.state.field,\n        gameOver: this.state.gameOver,\n        score: this.state.snakeLength - 1,\n        restart: this.restart.bind(this),\n        start: this.start.bind(this),\n        isStarted: this.state.isStarted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Score: \", this.state.snakeLength - 1));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 233\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","Snake","props","changeDirection","event","keyCode","state","direction","setState","pause","console","log","key","field","xSize","ySize","headX","headY","snakeLength","snake","x","y","length","appleX","appleY","isStarted","isWallsTransparent","gameOver","document","addEventListener","newAppleX","Math","round","random","newAppleY","isSnake","generateApple","cannibal","stop","i","data","className","push","value","concat","timerID","setInterval","move","makeSnake","drawField","clearInterval","setDefault","start","bind","restart","Component","render","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./Field\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10, ySize: 10,\n            headX: 9, headY: 5,\n            snakeLength: 1,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            isStarted: false,\n            isWallsTransparent: false,\n            gameOver: false\n        };\n    }\n\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.changeDirection);\n        document.addEventListener(\"keydown\", this.pause);\n    }\n\n    generateApple() {\n        const newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n        const newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n        if (!this.isSnake(newAppleX, newAppleY)) {\n            this.setState({\n                appleX: newAppleX,\n                appleY: newAppleY\n            });\n        } else {\n            this.generateApple();\n        }\n    }\n\n    changeDirection = (event) => {\n        if (event.keyCode === 37 && this.state.direction !== \"right\") {\n            this.setState({\n                direction: \"left\"\n            });\n        }\n        if (event.keyCode === 38 && this.state.direction !== \"down\") {\n            this.setState({\n                direction: \"up\"\n            });\n        }\n        if (event.keyCode === 39 && this.state.direction !== \"left\") {\n            this.setState({\n                direction: \"right\"\n            });\n        }\n        if (event.keyCode === 40 && this.state.direction !== \"up\") {\n            this.setState({\n                direction: \"down\"\n            });\n        }\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        this.cannibal();\n\n        if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n            this.setState({\n                snakeLength: this.state.snakeLength + 1\n            });\n            this.state.snake.length = this.state.snakeLength;\n            this.generateApple();\n        }\n\n        if (this.state.isWallsTransparent) {\n            if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n            if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n            if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n            if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n        } else {\n            if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 ||\n                this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n                this.stop();\n                this.setState({gameOver: true});\n            }\n        }\n    }\n\n    cannibal() {\n        for (let i = 1; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === this.state.headX && this.state.snake.y[i] === this.state.headY) {\n                this.stop();\n                this.setState({gameOver: true});\n            }\n        }\n    }\n\n    isSnake(x, y) {\n        for (let i = 0; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n        }\n        return false;\n    }\n\n    makeSnake() {\n        for (let i = this.state.snake.length - 1; i >= 0; i--) {\n            if (i > 0) {\n                this.state.snake.x[i] = this.state.snake.x[i-1];\n                this.state.snake.y[i] = this.state.snake.y[i-1];\n            }\n            if (i === 0) {\n                this.state.snake.x[i] = this.state.headX;\n                this.state.snake.y[i] = this.state.headY;\n            }\n        }\n    }\n\n    drawField() {\n        let data = [];\n        let className = \"\";\n        for (let y = 0; y < this.state.ySize; y++) {\n            data[y] = [];\n            for (let x = 0; x < this.state.xSize; x++) {\n                if (this.isSnake(x, y)) {\n                    if (x === this.state.headX && y === this.state.headY) {\n                        className = \"head\"\n                    } else {\n                        className = \"snake\"\n                    }\n                } else if (x === this.state.appleX && y === this.state.appleY) {\n                    className = \"apple\"\n                } else {\n                    className = \"pixel\"\n                }\n                data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n            }\n        }\n        this.setState({\n            field: this.state.field.concat(data)\n        });\n    }\n\n    start() {\n        if (!this.state.isStarted) {\n            this.timerID = setInterval(() => {\n                this.setState({\n                    gameOver: false,\n                    field: [],\n                    isStarted: true,\n                });\n                this.move();\n                this.makeSnake();\n                this.drawField();\n            }, 500)\n        }\n    }\n\n    stop() {\n        if (this.state.isStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                isStarted: false\n            });\n        }\n    }\n\n    pause = (event) => {\n        console.log(event.key);\n    }\n\n    setDefault() {\n        this.setState({\n            headX: 9, headY: 5,\n            snakeLength: 1,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            isStarted: false,\n        });\n    }\n\n    restart() {\n        this.setDefault();\n        this.start();\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" onKeyDown={this.changeDirection.bind(this)}>\n                <Field\n                    field={this.state.field}\n                    gameOver={this.state.gameOver}\n                    score={this.state.snakeLength - 1}\n                    restart={this.restart.bind(this)}\n                    start={this.start.bind(this)}\n                    isStarted={this.state.isStarted}/>\n                <p className=\"score\">Score: {this.state.snakeLength - 1}</p>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}