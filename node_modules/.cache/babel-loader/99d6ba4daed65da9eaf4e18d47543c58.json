{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./Field\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeDirection = function (key) {\n      switch (key) {\n        case 37:\n          _this.setState({\n            direction: \"left\"\n          });\n\n          break;\n\n        case 38:\n          _this.setState({\n            direction: \"up\"\n          });\n\n          break;\n\n        case 39:\n          _this.setState({\n            direction: \"right\"\n          });\n\n          break;\n\n        case 40:\n          _this.setState({\n            direction: \"down\"\n          });\n\n          break;\n      }\n\n      console.log(_this.state.direction);\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 7,\n      headY: 5,\n      snakeLength: 3,\n      direction: \"\",\n      appleX: 2,\n      appleY: 1\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"generateApple\",\n    value: function generateApple() {\n      while (this.state.field[this.state.appleX][this.state.appleY].className === \"snake\") {\n        this.setState({\n          appleX: Math.round(Math.random() * this.state.xSize),\n          appleY: Math.round(Math.random() * this.state.ySize)\n        });\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      }\n\n      console.log(\"X: \" + this.state.headX);\n      console.log(\"Y: \" + this.state.headY);\n      if (this.state.headX < 0) this.setState({\n        headX: this.state.xSize - 1\n      });\n      if (this.state.headX > this.state.xSize - 1) this.setState({\n        headX: 0\n      });\n      if (this.state.headY < 0) this.setState({\n        headY: this.state.ySize - 1\n      });\n      if (this.state.headY > this.state.ySize - 1) this.setState({\n        headY: 0\n      });\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (x === this.state.headX && y === this.state.headY) {\n            className = \"snake\";\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        _this2.setState({\n          field: []\n        });\n\n        _this2.move();\n\n        _this2.drawField();\n      }, 1000);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: function onKeyDown(event) {\n          return _this3.changeDirection(event.keyCode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Field, {\n        field: this.state.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.start.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.stop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"STOP\"));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","Snake","props","changeDirection","key","setState","direction","console","log","state","field","xSize","ySize","headX","headY","snakeLength","appleX","appleY","className","Math","round","random","data","y","x","push","value","concat","timerID","setInterval","move","drawField","clearInterval","event","keyCode","start","bind","stop","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./Field\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10,\n            ySize: 10,\n            headX: 7,\n            headY: 5,\n            snakeLength: 3,\n            direction: \"\",\n            appleX: 2,\n            appleY: 1\n        };\n    }\n\n    generateApple() {\n        while (this.state.field[this.state.appleX][this.state.appleY].className === \"snake\") {\n            this.setState({\n                appleX: Math.round(Math.random() * this.state.xSize),\n                appleY: Math.round(Math.random() * this.state.ySize)\n            });\n        }\n    }\n\n    changeDirection = (key) => {\n        switch (key) {\n            case 37:\n                this.setState({\n                    direction: \"left\"\n                });\n                break;\n            case 38:\n                this.setState({\n                    direction: \"up\"\n                });\n                break;\n            case 39:\n                this.setState({\n                    direction: \"right\"\n                });\n                break;\n            case 40:\n                this.setState({\n                    direction: \"down\"\n                });\n                break;\n        }\n        console.log(this.state.direction);\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        console.log(\"X: \" + this.state.headX);\n        console.log(\"Y: \" + this.state.headY);\n\n        if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n        if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n        if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n        if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n    }\n\n    drawField() {\n            let data = [];\n            let className = \"\";\n            for (let y = 0; y < this.state.ySize; y++) {\n                data[y] = [];\n                for (let x = 0; x < this.state.xSize; x++) {\n                    if (x === this.state.headX && y === this.state.headY) {\n                        className = \"snake\"\n                    } else if (x === this.state.appleX && y === this.state.appleY) {\n                        className = \"apple\"\n                    } else {\n                        className = \"pixel\"\n                    }\n                    data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n                }\n            }\n            this.setState({\n                field: this.state.field.concat(data)\n            });\n    }\n\n    start() {\n        this.timerID = setInterval(() => {\n            this.setState({\n                field: []\n            });\n            this.move();\n            this.drawField();\n        }, 1000)\n    }\n\n    stop() {\n        clearInterval(this.timerID);\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" onKeyDown={(event) => this.changeDirection(event.keyCode)}>\n                <Field field={this.state.field}/>\n                <button className=\"start-btn\" onClick={this.start.bind(this)}>START</button>\n                <button className=\"start-btn\" onClick={this.stop.bind(this)}>STOP</button>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}