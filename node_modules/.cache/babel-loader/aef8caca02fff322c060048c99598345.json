{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./Field\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeDirection = function (key) {\n      switch (key) {\n        case 37:\n          _this.setState({\n            direction: \"left\"\n          });\n\n          break;\n\n        case 38:\n          _this.setState({\n            direction: \"up\"\n          });\n\n          break;\n\n        case 39:\n          _this.setState({\n            direction: \"right\"\n          });\n\n          break;\n\n        case 40:\n          _this.setState({\n            direction: \"down\"\n          });\n\n          break;\n\n        default:\n          _this.setState({\n            direction: \"left\"\n          });\n\n      }\n\n      _this.start();\n\n      console.log(_this.state.direction);\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 7,\n      headY: 5,\n      snakeLength: 3,\n      direction: \"\",\n      appleX: 2,\n      appleY: 1,\n      isStarted: false\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"generateApple\",\n    value: function generateApple() {\n      this.setState({\n        appleX: Math.round(Math.random() * (this.state.xSize - 1)),\n        appleY: Math.round(Math.random() * (this.state.ySize - 1))\n      });\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      } // console.log(\"X: \" + this.state.headX);\n      // console.log(\"Y: \" + this.state.headY);\n\n\n      if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n        this.setState({\n          snakeLength: this.state.snakeLength + 1\n        });\n        this.generateApple();\n      }\n\n      console.log(this.state.snakeLength);\n      if (this.state.headX < 0) this.setState({\n        headX: this.state.xSize - 1\n      });\n      if (this.state.headX > this.state.xSize - 1) this.setState({\n        headX: 0\n      });\n      if (this.state.headY < 0) this.setState({\n        headY: this.state.ySize - 1\n      });\n      if (this.state.headY > this.state.ySize - 1) this.setState({\n        headY: 0\n      });\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (x === this.state.headX && y === this.state.headY) {\n            className = \"snake\";\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      if (!this.state.isStarted) {\n        this.timerID = setInterval(function () {\n          _this2.setState({\n            field: [],\n            isStarted: true\n          });\n\n          _this2.move();\n\n          _this2.drawField();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.state.isStarted) {\n        clearInterval(this.timerID);\n        this.setState({\n          isStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: function onKeyDown(event) {\n          return _this3.changeDirection(event.keyCode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Field, {\n        field: this.state.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.start.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.stop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"STOP\"), React.createElement(\"p\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Score: \", this.state.snakeLength - 3));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","Snake","props","changeDirection","key","setState","direction","start","console","log","state","field","xSize","ySize","headX","headY","snakeLength","appleX","appleY","isStarted","Math","round","random","generateApple","data","className","y","x","push","value","concat","timerID","setInterval","move","drawField","clearInterval","event","keyCode","bind","stop","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./Field\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10,\n            ySize: 10,\n            headX: 7,\n            headY: 5,\n            snakeLength: 3,\n            direction: \"\",\n            appleX: 2,\n            appleY: 1,\n            isStarted: false\n        };\n    }\n\n    generateApple() {\n        this.setState({\n            appleX: Math.round(Math.random() * (this.state.xSize - 1)),\n            appleY: Math.round(Math.random() * (this.state.ySize - 1))\n        });\n    }\n\n    changeDirection = (key) => {\n        switch (key) {\n            case 37:\n                this.setState({\n                    direction: \"left\"\n                });\n                break;\n            case 38:\n                this.setState({\n                    direction: \"up\"\n                });\n                break;\n            case 39:\n                this.setState({\n                    direction: \"right\"\n                });\n                break;\n            case 40:\n                this.setState({\n                    direction: \"down\"\n                });\n                break;\n            default:\n                this.setState({\n                    direction: \"left\"\n                });\n        }\n        this.start();\n        console.log(this.state.direction);\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        // console.log(\"X: \" + this.state.headX);\n        // console.log(\"Y: \" + this.state.headY);\n\n        if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n            this.setState({\n                snakeLength: this.state.snakeLength + 1\n            });\n            this.generateApple();\n        }\n        console.log(this.state.snakeLength);\n\n        if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n        if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n        if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n        if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n    }\n\n    drawField() {\n        let data = [];\n        let className = \"\";\n        for (let y = 0; y < this.state.ySize; y++) {\n            data[y] = [];\n            for (let x = 0; x < this.state.xSize; x++) {\n                if (x === this.state.headX && y === this.state.headY) {\n                    className = \"snake\"\n                } else if (x === this.state.appleX && y === this.state.appleY) {\n                    className = \"apple\"\n                } else {\n                    className = \"pixel\"\n                }\n                data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n            }\n        }\n        this.setState({\n            field: this.state.field.concat(data)\n        });\n    }\n\n    start() {\n        if (!this.state.isStarted) {\n            this.timerID = setInterval(() => {\n                this.setState({\n                    field: [],\n                    isStarted: true\n                });\n                this.move();\n                this.drawField();\n            }, 500)\n        }\n    }\n\n    stop() {\n        if (this.state.isStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                isStarted: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" onKeyDown={(event) => this.changeDirection(event.keyCode)}>\n                <Field field={this.state.field}/>\n                <button className=\"start-btn\" onClick={this.start.bind(this)}>START</button>\n                <button className=\"start-btn\" onClick={this.stop.bind(this)}>STOP</button>\n                <p className=\"score\">Score: {this.state.snakeLength - 3}</p>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}