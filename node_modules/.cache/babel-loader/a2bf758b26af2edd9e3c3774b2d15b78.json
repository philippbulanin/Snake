{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./Field\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeDirection = function (key) {\n      if (key === 37 && _this.state.direction !== \"right\") {\n        _this.setState({\n          direction: \"left\"\n        });\n      }\n\n      if (key === 38 && _this.state.direction !== \"down\") {\n        _this.setState({\n          direction: \"up\"\n        });\n      }\n\n      if (key === 39 && _this.state.direction !== \"left\") {\n        _this.setState({\n          direction: \"right\"\n        });\n      }\n\n      if (key === 40 && _this.state.direction !== \"up\") {\n        _this.setState({\n          direction: \"down\"\n        });\n      }\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 9,\n      headY: 5,\n      snakeLength: 1,\n      snake: {\n        x: [9],\n        y: [5],\n        length: 1\n      },\n      direction: \"\",\n      appleX: 2,\n      appleY: 1,\n      isStarted: false,\n      isWallsTransparent: false,\n      gameOver: false\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"generateApple\",\n    value: function generateApple() {\n      var newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n      var newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n\n      if (!this.isSnake(newAppleX, newAppleY)) {\n        this.setState({\n          appleX: newAppleX,\n          appleY: newAppleY\n        });\n      } else {\n        this.generateApple();\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      }\n\n      if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n        this.setState({\n          snakeLength: this.state.snakeLength + 1\n        });\n        this.state.snake.length = this.state.snakeLength;\n        this.generateApple();\n      } // if (this.isSnake(this.state.headX, this.state.headY) ) {\n      //     this.stop();\n      //     this.setState({gameOver: true});\n      // }\n\n\n      if (this.state.isWallsTransparent) {\n        if (this.state.headX < 0) this.setState({\n          headX: this.state.xSize - 1\n        });\n        if (this.state.headX > this.state.xSize - 1) this.setState({\n          headX: 0\n        });\n        if (this.state.headY < 0) this.setState({\n          headY: this.state.ySize - 1\n        });\n        if (this.state.headY > this.state.ySize - 1) this.setState({\n          headY: 0\n        });\n      } else {\n        if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 || this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n          this.stop();\n          this.setState({\n            gameOver: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"isSnake\",\n    value: function isSnake(x, y) {\n      for (var i = 0; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"makeSnake\",\n    value: function makeSnake() {\n      for (var i = this.state.snake.length - 1; i >= 0; i--) {\n        if (i > 0) {\n          this.state.snake.x[i] = this.state.snake.x[i - 1];\n          this.state.snake.y[i] = this.state.snake.y[i - 1];\n        }\n\n        if (i === 0) {\n          this.state.snake.x[i] = this.state.headX;\n          this.state.snake.y[i] = this.state.headY;\n        }\n      }\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (this.isSnake(x, y) && x !== this.state.headX && y !== this.state.headY) {\n            className = \"snake\";\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else if (x === this.state.snake.x[0] && y === this.state.snake.y[0]) {\n            className = \"head\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      console.log(this.state.direction);\n\n      if (!this.state.isStarted) {\n        this.timerID = setInterval(function () {\n          _this2.setState({\n            gameOver: false,\n            field: [],\n            isStarted: true\n          });\n\n          _this2.move();\n\n          _this2.makeSnake();\n\n          _this2.drawField();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.state.isStarted) {\n        clearInterval(this.timerID);\n        this.setState({\n          isStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setState({\n        headX: 9,\n        headY: 5,\n        snakeLength: 1,\n        snake: {\n          x: [9],\n          y: [5],\n          length: 1\n        },\n        direction: \"\",\n        appleX: 2,\n        appleY: 1,\n        isStarted: false,\n        gameOver: false\n      });\n      this.start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: function onKeyDown(event) {\n          return _this3.changeDirection(event.keyCode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Field, {\n        field: this.state.field,\n        gameOver: this.state.gameOver,\n        score: this.state.snakeLength - 1,\n        restart: this.restart.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.start.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.stop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"STOP\"), React.createElement(\"p\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Score: \", this.state.snakeLength - 1));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","Snake","props","changeDirection","key","state","direction","setState","field","xSize","ySize","headX","headY","snakeLength","snake","x","y","length","appleX","appleY","isStarted","isWallsTransparent","gameOver","newAppleX","Math","round","random","newAppleY","isSnake","generateApple","stop","i","data","className","push","value","concat","console","log","timerID","setInterval","move","makeSnake","drawField","clearInterval","start","event","keyCode","restart","bind","Component","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAAQC,KAAR,QAAoB,SAApB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UA6BnBC,eA7BmB,GA6BD,UAACC,GAAD,EAAS;AACvB,UAAIA,GAAG,KAAK,EAAR,IAAc,MAAKC,KAAL,CAAWC,SAAX,KAAyB,OAA3C,EAAoD;AAChD,cAAKC,QAAL,CAAc;AACVD,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;;AACD,UAAIF,GAAG,KAAK,EAAR,IAAc,MAAKC,KAAL,CAAWC,SAAX,KAAyB,MAA3C,EAAmD;AAC/C,cAAKC,QAAL,CAAc;AACVD,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;;AACD,UAAIF,GAAG,KAAK,EAAR,IAAc,MAAKC,KAAL,CAAWC,SAAX,KAAyB,MAA3C,EAAmD;AAC/C,cAAKC,QAAL,CAAc;AACVD,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;;AACD,UAAIF,GAAG,KAAK,EAAR,IAAc,MAAKC,KAAL,CAAWC,SAAX,KAAyB,IAA3C,EAAiD;AAC7C,cAAKC,QAAL,CAAc;AACVD,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;AACJ,KAlDkB;;AAEf,UAAKD,KAAL,GAAa;AACTG,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE,EAFE;AAEEC,MAAAA,KAAK,EAAE,EAFT;AAGTC,MAAAA,KAAK,EAAE,CAHE;AAGCC,MAAAA,KAAK,EAAE,CAHR;AAITC,MAAAA,WAAW,EAAE,CAJJ;AAKTC,MAAAA,KAAK,EAAE;AAACC,QAAAA,CAAC,EAAE,CAAC,CAAD,CAAJ;AAASC,QAAAA,CAAC,EAAE,CAAC,CAAD,CAAZ;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OALE;AAMTX,MAAAA,SAAS,EAAE,EANF;AAOTY,MAAAA,MAAM,EAAE,CAPC;AAOEC,MAAAA,MAAM,EAAE,CAPV;AAQTC,MAAAA,SAAS,EAAE,KARF;AASTC,MAAAA,kBAAkB,EAAE,KATX;AAUTC,MAAAA,QAAQ,EAAE;AAVD,KAAb;AAFe;AAclB;;;;oCAEe;AACZ,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAKrB,KAAL,CAAWI,KAAX,GAAmB,CAApC,CAAX,CAAlB;AACA,UAAMkB,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAKrB,KAAL,CAAWK,KAAX,GAAmB,CAApC,CAAX,CAAlB;;AACA,UAAI,CAAC,KAAKkB,OAAL,CAAaL,SAAb,EAAwBI,SAAxB,CAAL,EAAyC;AACrC,aAAKpB,QAAL,CAAc;AACVW,UAAAA,MAAM,EAAEK,SADE;AAEVJ,UAAAA,MAAM,EAAEQ;AAFE,SAAd;AAIH,OALD,MAKO;AACH,aAAKE,aAAL;AACH;AACJ;;;2BAyBM;AACH,cAAQ,KAAKxB,KAAL,CAAWC,SAAnB;AACI,aAAK,MAAL;AACI,eAAKC,QAAL,CAAc;AACVI,YAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAAX,GAAmB;AADhB,WAAd;AAGA;;AACJ,aAAK,OAAL;AACI,eAAKJ,QAAL,CAAc;AACVI,YAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAAX,GAAmB;AADhB,WAAd;AAGA;;AACJ,aAAK,IAAL;AACI,eAAKJ,QAAL,CAAc;AACVK,YAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO,KAAX,GAAmB;AADhB,WAAd;AAGA;;AACJ,aAAK,MAAL;AACI,eAAKL,QAAL,CAAc;AACVK,YAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO,KAAX,GAAmB;AADhB,WAAd;AAGA;;AACJ;AACI,eAAKL,QAAL,CAAc;AACVI,YAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KADR;AAEVC,YAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO;AAFR,WAAd;AAtBR;;AA4BA,UAAI,KAAKP,KAAL,CAAWM,KAAX,KAAqB,KAAKN,KAAL,CAAWa,MAAhC,IAA0C,KAAKb,KAAL,CAAWO,KAAX,KAAqB,KAAKP,KAAL,CAAWc,MAA9E,EAAsF;AAClF,aAAKZ,QAAL,CAAc;AACVM,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWQ,WAAX,GAAyB;AAD5B,SAAd;AAGA,aAAKR,KAAL,CAAWS,KAAX,CAAiBG,MAAjB,GAA0B,KAAKZ,KAAL,CAAWQ,WAArC;AACA,aAAKgB,aAAL;AACH,OAnCE,CAqCH;AACA;AACA;AACA;;;AAEA,UAAI,KAAKxB,KAAL,CAAWgB,kBAAf,EAAmC;AAC/B,YAAI,KAAKhB,KAAL,CAAWM,KAAX,GAAmB,CAAvB,EAA0B,KAAKJ,QAAL,CAAc;AAACI,UAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,KAAX,GAAmB;AAA3B,SAAd;AAC1B,YAAI,KAAKJ,KAAL,CAAWM,KAAX,GAAmB,KAAKN,KAAL,CAAWI,KAAX,GAAmB,CAA1C,EAA6C,KAAKF,QAAL,CAAc;AAACI,UAAAA,KAAK,EAAE;AAAR,SAAd;AAC7C,YAAI,KAAKN,KAAL,CAAWO,KAAX,GAAmB,CAAvB,EAA0B,KAAKL,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWK,KAAX,GAAmB;AAA3B,SAAd;AAC1B,YAAI,KAAKL,KAAL,CAAWO,KAAX,GAAmB,KAAKP,KAAL,CAAWK,KAAX,GAAmB,CAA1C,EAA6C,KAAKH,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAE;AAAR,SAAd;AAChD,OALD,MAKO;AACH,YAAI,KAAKP,KAAL,CAAWM,KAAX,GAAmB,CAAnB,IAAwB,KAAKN,KAAL,CAAWM,KAAX,GAAmB,KAAKN,KAAL,CAAWI,KAAX,GAAmB,CAA9D,IACA,KAAKJ,KAAL,CAAWO,KAAX,GAAmB,CADnB,IACwB,KAAKP,KAAL,CAAWO,KAAX,GAAmB,KAAKP,KAAL,CAAWK,KAAX,GAAmB,CADlE,EACqE;AACjE,eAAKoB,IAAL;AACA,eAAKvB,QAAL,CAAc;AAACe,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACH;AACJ;AACJ;;;4BAEOP,C,EAAGC,C,EAAG;AACV,WAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,KAAL,CAAWS,KAAX,CAAiBG,MAArC,EAA6Cc,CAAC,EAA9C,EAAkD;AAC9C,YAAI,KAAK1B,KAAL,CAAWS,KAAX,CAAiBC,CAAjB,CAAmBgB,CAAnB,MAA0BhB,CAA1B,IAA+B,KAAKV,KAAL,CAAWS,KAAX,CAAiBE,CAAjB,CAAmBe,CAAnB,MAA0Bf,CAA7D,EAAgE,OAAO,IAAP;AACnE;;AACD,aAAO,KAAP;AACH;;;gCAEW;AACR,WAAK,IAAIe,CAAC,GAAG,KAAK1B,KAAL,CAAWS,KAAX,CAAiBG,MAAjB,GAA0B,CAAvC,EAA0Cc,CAAC,IAAI,CAA/C,EAAkDA,CAAC,EAAnD,EAAuD;AACnD,YAAIA,CAAC,GAAG,CAAR,EAAW;AACP,eAAK1B,KAAL,CAAWS,KAAX,CAAiBC,CAAjB,CAAmBgB,CAAnB,IAAwB,KAAK1B,KAAL,CAAWS,KAAX,CAAiBC,CAAjB,CAAmBgB,CAAC,GAAC,CAArB,CAAxB;AACA,eAAK1B,KAAL,CAAWS,KAAX,CAAiBE,CAAjB,CAAmBe,CAAnB,IAAwB,KAAK1B,KAAL,CAAWS,KAAX,CAAiBE,CAAjB,CAAmBe,CAAC,GAAC,CAArB,CAAxB;AACH;;AACD,YAAIA,CAAC,KAAK,CAAV,EAAa;AACT,eAAK1B,KAAL,CAAWS,KAAX,CAAiBC,CAAjB,CAAmBgB,CAAnB,IAAwB,KAAK1B,KAAL,CAAWM,KAAnC;AACA,eAAKN,KAAL,CAAWS,KAAX,CAAiBE,CAAjB,CAAmBe,CAAnB,IAAwB,KAAK1B,KAAL,CAAWO,KAAnC;AACH;AACJ;AACJ;;;gCAEW;AACR,UAAIoB,IAAI,GAAG,EAAX;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,KAAL,CAAWK,KAA/B,EAAsCM,CAAC,EAAvC,EAA2C;AACvCgB,QAAAA,IAAI,CAAChB,CAAD,CAAJ,GAAU,EAAV;;AACA,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,KAAL,CAAWI,KAA/B,EAAsCM,CAAC,EAAvC,EAA2C;AACvC,cAAI,KAAKa,OAAL,CAAab,CAAb,EAAgBC,CAAhB,KAAsBD,CAAC,KAAK,KAAKV,KAAL,CAAWM,KAAvC,IAAgDK,CAAC,KAAK,KAAKX,KAAL,CAAWO,KAArE,EAA4E;AACxEqB,YAAAA,SAAS,GAAG,OAAZ;AACH,WAFD,MAEO,IAAIlB,CAAC,KAAK,KAAKV,KAAL,CAAWa,MAAjB,IAA2BF,CAAC,KAAK,KAAKX,KAAL,CAAWc,MAAhD,EAAwD;AAC3Dc,YAAAA,SAAS,GAAG,OAAZ;AACH,WAFM,MAEA,IAAIlB,CAAC,KAAK,KAAKV,KAAL,CAAWS,KAAX,CAAiBC,CAAjB,CAAmB,CAAnB,CAAN,IAA+BC,CAAC,KAAK,KAAKX,KAAL,CAAWS,KAAX,CAAiBE,CAAjB,CAAmB,CAAnB,CAAzC,EAAgE;AACnEiB,YAAAA,SAAS,GAAG,MAAZ;AACH,WAFM,MAEA;AACHA,YAAAA,SAAS,GAAG,OAAZ;AACH;;AACDD,UAAAA,IAAI,CAAChB,CAAD,CAAJ,CAAQkB,IAAR,CAAa;AAAC9B,YAAAA,GAAG,EAAEW,CAAC,GAAG,EAAJ,GAASC,CAAf;AAAkBiB,YAAAA,SAAS,EAAEA,SAA7B;AAAwCE,YAAAA,KAAK,EAAEpB,CAAC,GAAG,GAAJ,GAAUC;AAAzD,WAAb;AACH;AACJ;;AACD,WAAKT,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiB4B,MAAjB,CAAwBJ,IAAxB;AADG,OAAd;AAGH;;;4BAEO;AAAA;;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjC,KAAL,CAAWC,SAAvB;;AACA,UAAI,CAAC,KAAKD,KAAL,CAAWe,SAAhB,EAA2B;AACvB,aAAKmB,OAAL,GAAeC,WAAW,CAAC,YAAM;AAC7B,UAAA,MAAI,CAACjC,QAAL,CAAc;AACVe,YAAAA,QAAQ,EAAE,KADA;AAEVd,YAAAA,KAAK,EAAE,EAFG;AAGVY,YAAAA,SAAS,EAAE;AAHD,WAAd;;AAKA,UAAA,MAAI,CAACqB,IAAL;;AACA,UAAA,MAAI,CAACC,SAAL;;AACA,UAAA,MAAI,CAACC,SAAL;AACH,SATyB,EASvB,GATuB,CAA1B;AAUH;AACJ;;;2BAEM;AACH,UAAI,KAAKtC,KAAL,CAAWe,SAAf,EAA0B;AACtBwB,QAAAA,aAAa,CAAC,KAAKL,OAAN,CAAb;AACA,aAAKhC,QAAL,CAAc;AACVa,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;AACJ;;;8BAES;AACN,WAAKb,QAAL,CAAc;AACVI,QAAAA,KAAK,EAAE,CADG;AACAC,QAAAA,KAAK,EAAE,CADP;AAEVC,QAAAA,WAAW,EAAE,CAFH;AAGVC,QAAAA,KAAK,EAAE;AAACC,UAAAA,CAAC,EAAE,CAAC,CAAD,CAAJ;AAASC,UAAAA,CAAC,EAAE,CAAC,CAAD,CAAZ;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAHG;AAIVX,QAAAA,SAAS,EAAE,EAJD;AAKVY,QAAAA,MAAM,EAAE,CALE;AAKCC,QAAAA,MAAM,EAAE,CALT;AAMVC,QAAAA,SAAS,EAAE,KAND;AAOVE,QAAAA,QAAQ,EAAE;AAPA,OAAd;AASA,WAAKuB,KAAL;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,iBAAW,MAAI,CAAC3C,eAAL,CAAqB2C,KAAK,CAACC,OAA3B,CAAX;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWG,KADtB;AAEI,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWiB,QAFzB;AAGI,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWQ,WAAX,GAAyB,CAHpC;AAII,QAAA,OAAO,EAAE,KAAKmC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,IAAX,CAAgB,IAAhB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKnB,IAAL,CAAUmB,IAAV,CAAe,IAAf,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B,KAAK5C,KAAL,CAAWQ,WAAX,GAAyB,CAAtD,CARJ,CADJ;AAaH;;;;EA5Mef,KAAK,CAACoD,S;;AA+M1BnD,QAAQ,CAACoD,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./Field\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10, ySize: 10,\n            headX: 9, headY: 5,\n            snakeLength: 1,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            isStarted: false,\n            isWallsTransparent: false,\n            gameOver: false\n        };\n    }\n\n    generateApple() {\n        const newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n        const newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n        if (!this.isSnake(newAppleX, newAppleY)) {\n            this.setState({\n                appleX: newAppleX,\n                appleY: newAppleY\n            });\n        } else {\n            this.generateApple();\n        }\n    }\n\n    changeDirection = (key) => {\n        if (key === 37 && this.state.direction !== \"right\") {\n            this.setState({\n                direction: \"left\"\n            });\n        }\n        if (key === 38 && this.state.direction !== \"down\") {\n            this.setState({\n                direction: \"up\"\n            });\n        }\n        if (key === 39 && this.state.direction !== \"left\") {\n            this.setState({\n                direction: \"right\"\n            });\n        }\n        if (key === 40 && this.state.direction !== \"up\") {\n            this.setState({\n                direction: \"down\"\n            });\n        }\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n            this.setState({\n                snakeLength: this.state.snakeLength + 1\n            });\n            this.state.snake.length = this.state.snakeLength;\n            this.generateApple();\n        }\n\n        // if (this.isSnake(this.state.headX, this.state.headY) ) {\n        //     this.stop();\n        //     this.setState({gameOver: true});\n        // }\n\n        if (this.state.isWallsTransparent) {\n            if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n            if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n            if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n            if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n        } else {\n            if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 ||\n                this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n                this.stop();\n                this.setState({gameOver: true});\n            }\n        }\n    }\n\n    isSnake(x, y) {\n        for (let i = 0; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n        }\n        return false;\n    }\n\n    makeSnake() {\n        for (let i = this.state.snake.length - 1; i >= 0; i--) {\n            if (i > 0) {\n                this.state.snake.x[i] = this.state.snake.x[i-1];\n                this.state.snake.y[i] = this.state.snake.y[i-1];\n            }\n            if (i === 0) {\n                this.state.snake.x[i] = this.state.headX;\n                this.state.snake.y[i] = this.state.headY;\n            }\n        }\n    }\n\n    drawField() {\n        let data = [];\n        let className = \"\";\n        for (let y = 0; y < this.state.ySize; y++) {\n            data[y] = [];\n            for (let x = 0; x < this.state.xSize; x++) {\n                if (this.isSnake(x, y) && x !== this.state.headX && y !== this.state.headY) {\n                    className = \"snake\"\n                } else if (x === this.state.appleX && y === this.state.appleY) {\n                    className = \"apple\"\n                } else if (x === this.state.snake.x[0] && y === this.state.snake.y[0]) {\n                    className = \"head\"\n                } else {\n                    className = \"pixel\"\n                }\n                data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n            }\n        }\n        this.setState({\n            field: this.state.field.concat(data)\n        });\n    }\n\n    start() {\n        console.log(this.state.direction);\n        if (!this.state.isStarted) {\n            this.timerID = setInterval(() => {\n                this.setState({\n                    gameOver: false,\n                    field: [],\n                    isStarted: true,\n                });\n                this.move();\n                this.makeSnake();\n                this.drawField();\n            }, 500)\n        }\n    }\n\n    stop() {\n        if (this.state.isStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                isStarted: false\n            });\n        }\n    }\n\n    restart() {\n        this.setState({\n            headX: 9, headY: 5,\n            snakeLength: 1,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            isStarted: false,\n            gameOver: false\n        });\n        this.start();\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" onKeyDown={(event) => this.changeDirection(event.keyCode)}>\n                <Field\n                    field={this.state.field}\n                    gameOver={this.state.gameOver}\n                    score={this.state.snakeLength - 1}\n                    restart={this.restart.bind(this)}/>\n                <button className=\"start-btn\" onClick={this.start.bind(this)}>START</button>\n                <button className=\"start-btn\" onClick={this.stop.bind(this)}>STOP</button>\n                <p className=\"score\">Score: {this.state.snakeLength - 1}</p>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}