{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./components/Field\";\nimport { SubMenu } from \"./components/SubMenu\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeLevel = function (level) {\n      _this.setState({\n        level: level\n      });\n    };\n\n    _this.changeDirection = function (event) {\n      if (event.keyCode === 37 && _this.state.direction !== \"right\") {\n        _this.setState({\n          direction: \"left\"\n        });\n      }\n\n      if (event.keyCode === 38 && _this.state.direction !== \"down\") {\n        _this.setState({\n          direction: \"up\"\n        });\n      }\n\n      if (event.keyCode === 39 && _this.state.direction !== \"left\") {\n        _this.setState({\n          direction: \"right\"\n        });\n      }\n\n      if (event.keyCode === 40 && _this.state.direction !== \"up\") {\n        _this.setState({\n          direction: \"down\"\n        });\n      }\n    };\n\n    _this.handleSpace = function (event) {\n      if (event.keyCode === 32 && _this.state.screen === \"mainMenu\") _this.start();\n      if (event.keyCode === 32 && _this.state.screen === \"gameOver\") _this.restart();\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 9,\n      headY: 5,\n      snake: {\n        x: [9],\n        y: [5],\n        length: 1\n      },\n      direction: \"\",\n      appleX: 2,\n      appleY: 1,\n      isStarted: false,\n      isWallsTransparent: false,\n      difficulty: {\n        easy: 500,\n        medium: 350,\n        hard: 200,\n        crazy: 100,\n        insane: 50\n      },\n      level: \"easy\",\n      score: 0,\n      coefficient: {\n        easy: 1,\n        medium: 2,\n        hard: 3,\n        crazy: 5,\n        insane: 10\n      },\n      screen: \"mainMenu\"\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.changeDirection);\n      document.addEventListener(\"keydown\", this.handleSpace);\n    }\n  }, {\n    key: \"calcScore\",\n    value: function calcScore() {\n      this.setState({\n        score: (this.state.snake.length - 1) * 100 * this.state.coefficient[this.state.level]\n      });\n    }\n  }, {\n    key: \"generateApple\",\n    value: function generateApple() {\n      var newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n      var newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n\n      if (!this.isSnake(newAppleX, newAppleY) && newAppleX !== this.state.headX && newAppleY !== this.state.headY) {\n        this.setState({\n          appleX: newAppleX,\n          appleY: newAppleY\n        });\n      } else {\n        this.generateApple();\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      }\n\n      this.cannibal();\n\n      if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n        this.setState({\n          snake: {\n            x: this.state.snake.x,\n            y: this.state.snake.y,\n            length: this.state.snake.length + 10\n          }\n        });\n        this.calcScore();\n        this.generateApple();\n      }\n\n      if (this.state.isWallsTransparent) {\n        if (this.state.headX < 0) this.setState({\n          headX: this.state.xSize - 1\n        });\n        if (this.state.headX > this.state.xSize - 1) this.setState({\n          headX: 0\n        });\n        if (this.state.headY < 0) this.setState({\n          headY: this.state.ySize - 1\n        });\n        if (this.state.headY > this.state.ySize - 1) this.setState({\n          headY: 0\n        });\n      } else {\n        if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 || this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n          this.stop();\n          this.setState({\n            screen: \"gameOver\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"cannibal\",\n    value: function cannibal() {\n      for (var i = 1; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === this.state.headX && this.state.snake.y[i] === this.state.headY) {\n          this.stop();\n          this.setState({\n            screen: \"gameOver\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"isSnake\",\n    value: function isSnake(x, y) {\n      for (var i = 0; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"makeSnake\",\n    value: function makeSnake() {\n      var x = this.state.snake.x,\n          y = this.state.snake.y;\n\n      for (var i = this.state.snake.length - 1; i >= 0; i--) {\n        if (i > 0) {\n          x[i] = x[i - 1];\n          y[i] = y[i - 1];\n        }\n\n        if (i === 0) {\n          x[i] = this.state.headX;\n          y[i] = this.state.headY;\n        }\n      }\n\n      this.setState({\n        snake: {\n          x: x,\n          y: y,\n          length: this.state.snake.length\n        }\n      });\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (this.isSnake(x, y)) {\n            if (x === this.state.headX && y === this.state.headY) {\n              className = \"head\";\n            } else {\n              className = \"snake\";\n            }\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      this.setDefault();\n\n      if (!this.state.isStarted) {\n        this.timerID = setInterval(function () {\n          _this2.setState({\n            screen: \"game\",\n            field: [],\n            isStarted: true\n          });\n\n          console.log(\"drawing...\");\n\n          _this2.move();\n\n          _this2.makeSnake();\n\n          _this2.drawField();\n        }, this.state.difficulty[this.state.level]);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.state.isStarted) {\n        clearInterval(this.timerID);\n        this.setState({\n          isStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"setDefault\",\n    value: function setDefault() {\n      this.stop();\n      this.setState({\n        headX: 9,\n        headY: 5,\n        snake: {\n          x: [9],\n          y: [5],\n          length: 1\n        },\n        direction: \"\",\n        appleX: 2,\n        appleY: 1,\n        score: 0,\n        isStarted: false\n      });\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setDefault();\n      this.start();\n    }\n  }, {\n    key: \"goToMainMenu\",\n    value: function goToMainMenu() {\n      this.setDefault();\n      this.setState({\n        screen: \"mainMenu\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var subMenu = this.state.screen === \"game\" || this.state.screen === \"gameOver\" ? React.createElement(SubMenu, {\n        level: this.state.level,\n        goToMainMenu: this.goToMainMenu.bind(this),\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: this.changeDirection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, subMenu, React.createElement(Field, {\n        field: this.state.field,\n        score: this.state.score,\n        restart: this.restart.bind(this),\n        start: this.start.bind(this),\n        screen: this.state.screen,\n        changeLevel: this.changeLevel,\n        level: this.state.level,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","SubMenu","Snake","props","changeLevel","level","setState","changeDirection","event","keyCode","state","direction","handleSpace","screen","start","restart","field","xSize","ySize","headX","headY","snake","x","y","length","appleX","appleY","isStarted","isWallsTransparent","difficulty","easy","medium","hard","crazy","insane","score","coefficient","document","addEventListener","newAppleX","Math","round","random","newAppleY","isSnake","generateApple","cannibal","calcScore","stop","i","data","className","push","key","value","concat","setDefault","timerID","setInterval","console","log","move","makeSnake","drawField","clearInterval","subMenu","goToMainMenu","bind","Component","render","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./components/Field\";\nimport {SubMenu} from \"./components/SubMenu\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10, ySize: 10,\n            headX: 9, headY: 5,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            isStarted: false,\n            isWallsTransparent: false,\n            difficulty: {easy: 500, medium: 350, hard: 200, crazy: 100, insane: 50},\n            level: \"easy\",\n            score: 0,\n            coefficient: {easy: 1, medium: 2, hard: 3, crazy: 5, insane: 10},\n            screen: \"mainMenu\",\n        };\n    }\n\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.changeDirection);\n        document.addEventListener(\"keydown\", this.handleSpace);\n    }\n\n    calcScore() {\n        this.setState({\n            score: (this.state.snake.length - 1) * 100 * this.state.coefficient[this.state.level]\n        });\n    }\n\n    generateApple() {\n        const newAppleX = Math.round(Math.random() * (this.state.xSize - 1));\n        const newAppleY = Math.round(Math.random() * (this.state.ySize - 1));\n        if (!this.isSnake(newAppleX, newAppleY) && newAppleX !== this.state.headX && newAppleY !== this.state.headY) {\n            this.setState({\n                appleX: newAppleX,\n                appleY: newAppleY\n            });\n        } else {\n            this.generateApple();\n        }\n    }\n\n    changeLevel = (level) => {\n        this.setState({\n            level: level\n        });\n    };\n\n    changeDirection = (event) => {\n        if (event.keyCode === 37 && this.state.direction !== \"right\") {\n            this.setState({\n                direction: \"left\"\n            });\n        }\n        if (event.keyCode === 38 && this.state.direction !== \"down\") {\n            this.setState({\n                direction: \"up\"\n            });\n        }\n        if (event.keyCode === 39 && this.state.direction !== \"left\") {\n            this.setState({\n                direction: \"right\"\n            });\n        }\n        if (event.keyCode === 40 && this.state.direction !== \"up\") {\n            this.setState({\n                direction: \"down\"\n            });\n        }\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        this.cannibal();\n\n        if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n            this.setState({\n                snake: {x: this.state.snake.x, y: this.state.snake.y, length: this.state.snake.length + 10},\n            });\n            this.calcScore();\n            this.generateApple();\n        }\n\n        if (this.state.isWallsTransparent) {\n            if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n            if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n            if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n            if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n        } else {\n            if (this.state.headX < 0 || this.state.headX > this.state.xSize - 1 ||\n                this.state.headY < 0 || this.state.headY > this.state.ySize - 1) {\n                this.stop();\n                this.setState({screen: \"gameOver\"});\n            }\n        }\n    }\n\n    cannibal() {\n        for (let i = 1; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === this.state.headX && this.state.snake.y[i] === this.state.headY) {\n                this.stop();\n                this.setState({screen: \"gameOver\"});\n            }\n        }\n    }\n\n    isSnake(x, y) {\n        for (let i = 0; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n        }\n        return false;\n    }\n\n    makeSnake() {\n        let x = this.state.snake.x,\n            y = this.state.snake.y;\n\n        for (let i = this.state.snake.length - 1; i >= 0; i--) {\n            if (i > 0) {\n                x[i] = x[i - 1];\n                y[i] = y[i - 1];\n            }\n            if (i === 0) {\n                x[i] = this.state.headX;\n                y[i] = this.state.headY;\n            }\n        }\n        this.setState({\n            snake: {x: x, y: y, length: this.state.snake.length}\n        });\n    }\n\n    drawField() {\n        let data = [];\n        let className = \"\";\n        for (let y = 0; y < this.state.ySize; y++) {\n            data[y] = [];\n            for (let x = 0; x < this.state.xSize; x++) {\n                if (this.isSnake(x, y)) {\n                    if (x === this.state.headX && y === this.state.headY) {\n                        className = \"head\"\n                    } else {\n                        className = \"snake\"\n                    }\n                } else if (x === this.state.appleX && y === this.state.appleY) {\n                    className = \"apple\"\n                } else {\n                    className = \"pixel\"\n                }\n                data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n            }\n        }\n        this.setState({\n            field: this.state.field.concat(data)\n        });\n    }\n\n    handleSpace = (event) => {\n        if(event.keyCode === 32 && this.state.screen === \"mainMenu\") this.start();\n        if(event.keyCode === 32 && this.state.screen === \"gameOver\") this.restart();\n    };\n\n    start() {\n        this.setDefault();\n        if (!this.state.isStarted) {\n            this.timerID = setInterval(() => {\n                this.setState({\n                    screen: \"game\",\n                    field: [],\n                    isStarted: true,\n                });\n                console.log(\"drawing...\");\n                this.move();\n                this.makeSnake();\n                this.drawField();\n            }, this.state.difficulty[this.state.level])\n        }\n    }\n\n    stop() {\n        if (this.state.isStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                isStarted: false\n            });\n        }\n    }\n\n    setDefault() {\n        this.stop();\n        this.setState({\n            headX: 9, headY: 5,\n            snake: {x: [9], y: [5], length: 1},\n            direction: \"\",\n            appleX: 2, appleY: 1,\n            score: 0,\n            isStarted: false,\n        });\n    }\n\n    restart() {\n        this.setDefault();\n        this.start();\n    }\n\n    goToMainMenu() {\n        this.setDefault();\n        this.setState({\n            screen: \"mainMenu\"\n        });\n    }\n\n    render() {\n        const subMenu = this.state.screen === \"game\" || this.state.screen === \"gameOver\" ?\n              <SubMenu\n                  level={this.state.level}\n                  goToMainMenu={this.goToMainMenu.bind(this)}\n                  score={this.state.score}\n              /> : null;\n        return (\n            <div\n                className=\"wrapper\"\n                onKeyDown={this.changeDirection.bind(this)}>\n                {subMenu}\n                <Field\n                    field={this.state.field}\n                    score={this.state.score}\n                    restart={this.restart.bind(this)}\n                    start={this.start.bind(this)}\n                    screen={this.state.screen}\n                    changeLevel={this.changeLevel}\n                    level={this.state.level}\n                />\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}