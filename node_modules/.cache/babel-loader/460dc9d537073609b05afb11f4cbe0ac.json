{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\Field.js\";\nimport React from 'react';\nimport { Pixel } from \"./Pixel\";\nexport var Field =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  function Field() {\n    _classCallCheck(this, Field);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Field).apply(this, arguments));\n  }\n\n  _createClass(Field, [{\n    key: \"render\",\n    value: function render() {\n      var field = [];\n\n      if (this.props.gameOver) {\n        field = React.createElement(\"div\", {\n          className: \"gameover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, \"Game over\"));\n      } else {\n        field = this.props.field.map(function (pixelX) {\n          return pixelX.map(function (pixelY) {\n            return React.createElement(Pixel, {\n              key: pixelY.key,\n              className: pixelY.className,\n              value: pixelY.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            });\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, field);\n    }\n  }]);\n\n  return Field;\n}(React.Component);","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\Field.js"],"names":["React","Pixel","Field","field","props","gameOver","map","pixelX","pixelY","key","className","value","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEa;AACL,UAAIC,KAAK,GAAG,EAAZ;;AACA,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACrBF,QAAAA,KAAK,GACD;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH,OAND,MAMO;AACHA,QAAAA,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,MAAD;AAAA,iBACzBA,MAAM,CAACD,GAAP,CAAW,UAACE,MAAD;AAAA,mBACP,oBAAC,KAAD;AAAO,cAAA,GAAG,EAAEA,MAAM,CAACC,GAAnB;AAAwB,cAAA,SAAS,EAAED,MAAM,CAACE,SAA1C;AAAqD,cAAA,KAAK,EAAEF,MAAM,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO;AAAA,WAAX,CADyB;AAAA,SAArB,CAAR;AAIH;;AACD,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,KADL,CADJ;AAKH;AArBL;;AAAA;AAAA,EAA2BH,KAAK,CAACY,SAAjC","sourcesContent":["import React from 'react';\r\nimport {Pixel} from \"./Pixel\";\r\n\r\nexport class Field extends React.Component {\r\n\r\n    render() {\r\n        let field = [];\r\n        if (this.props.gameOver) {\r\n            field = (\r\n                <div className=\"gameover\">\r\n                    <h1>Game over</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            field = this.props.field.map((pixelX) =>\r\n                pixelX.map((pixelY) =>\r\n                    <Pixel key={pixelY.key} className={pixelY.className} value={pixelY.value}/>)\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"field\">\r\n                {field}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}