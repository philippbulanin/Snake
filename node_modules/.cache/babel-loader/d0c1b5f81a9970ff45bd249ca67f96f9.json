{"ast":null,"code":"import _classCallCheck from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Google \\u0414\\u0438\\u0441\\u043A\\\\Projects\\\\React\\\\snake\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Field } from \"./Field\";\n\nvar Snake =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snake, _React$Component);\n\n  function Snake(props) {\n    var _this;\n\n    _classCallCheck(this, Snake);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snake).call(this, props));\n\n    _this.changeDirection = function (key) {\n      switch (key) {\n        case 37:\n          if (_this.state.direction !== \"right\") {\n            _this.setState({\n              direction: \"left\"\n            });\n\n            break;\n          }\n\n        case 38:\n          _this.setState({\n            direction: \"up\"\n          });\n\n          break;\n\n        case 39:\n          _this.setState({\n            direction: \"right\"\n          });\n\n          break;\n\n        case 40:\n          _this.setState({\n            direction: \"down\"\n          });\n\n          break;\n\n        default:\n          _this.setState({\n            direction: \"left\"\n          });\n\n      }\n\n      _this.start();\n\n      console.log(_this.state.direction);\n    };\n\n    _this.state = {\n      field: [],\n      xSize: 10,\n      ySize: 10,\n      headX: 7,\n      headY: 5,\n      snakeLength: 3,\n      snake: {\n        x: [7, 8, 9],\n        y: [5, 5, 5],\n        length: 3\n      },\n      direction: \"\",\n      appleX: 2,\n      appleY: 1,\n      isStarted: false\n    };\n    return _this;\n  }\n\n  _createClass(Snake, [{\n    key: \"generateApple\",\n    value: function generateApple() {\n      this.setState({\n        appleX: Math.round(Math.random() * (this.state.xSize - 1)),\n        appleY: Math.round(Math.random() * (this.state.ySize - 1))\n      });\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      switch (this.state.direction) {\n        case \"left\":\n          this.setState({\n            headX: this.state.headX - 1\n          });\n          break;\n\n        case \"right\":\n          this.setState({\n            headX: this.state.headX + 1\n          });\n          break;\n\n        case \"up\":\n          this.setState({\n            headY: this.state.headY - 1\n          });\n          break;\n\n        case \"down\":\n          this.setState({\n            headY: this.state.headY + 1\n          });\n          break;\n\n        default:\n          this.setState({\n            headX: this.state.headX,\n            headY: this.state.headY\n          });\n      }\n\n      if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n        this.setState({\n          snakeLength: this.state.snakeLength + 1\n        });\n        this.state.snake.length = this.state.snakeLength;\n        this.generateApple();\n      }\n\n      if (this.state.headX < 0) this.setState({\n        headX: this.state.xSize - 1\n      });\n      if (this.state.headX > this.state.xSize - 1) this.setState({\n        headX: 0\n      });\n      if (this.state.headY < 0) this.setState({\n        headY: this.state.ySize - 1\n      });\n      if (this.state.headY > this.state.ySize - 1) this.setState({\n        headY: 0\n      });\n    }\n  }, {\n    key: \"isSnake\",\n    value: function isSnake(x, y) {\n      for (var i = 0; i < this.state.snake.length; i++) {\n        if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"makeSnake\",\n    value: function makeSnake() {\n      for (var i = this.state.snake.length - 1; i >= 0; i--) {\n        if (i > 0) {\n          this.state.snake.x[i] = this.state.snake.x[i - 1];\n          this.state.snake.y[i] = this.state.snake.y[i - 1];\n        }\n\n        if (i === 0) {\n          this.state.snake.x[i] = this.state.headX;\n          this.state.snake.y[i] = this.state.headY;\n        }\n      }\n    }\n  }, {\n    key: \"drawField\",\n    value: function drawField() {\n      var data = [];\n      var className = \"\";\n\n      for (var y = 0; y < this.state.ySize; y++) {\n        data[y] = [];\n\n        for (var x = 0; x < this.state.xSize; x++) {\n          if (this.isSnake(x, y)) {\n            className = \"snake\";\n          } else if (x === this.state.appleX && y === this.state.appleY) {\n            className = \"apple\";\n          } else {\n            className = \"pixel\";\n          }\n\n          data[y].push({\n            key: x + \"\" + y,\n            className: className,\n            value: x + \":\" + y\n          });\n        }\n      }\n\n      this.setState({\n        field: this.state.field.concat(data)\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      if (!this.state.isStarted) {\n        this.timerID = setInterval(function () {\n          _this2.setState({\n            field: [],\n            isStarted: true\n          });\n\n          _this2.move();\n\n          _this2.makeSnake();\n\n          _this2.drawField();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.state.isStarted) {\n        clearInterval(this.timerID);\n        this.setState({\n          isStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onKeyDown: function onKeyDown(event) {\n          return _this3.changeDirection(event.keyCode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Field, {\n        field: this.state.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.start.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        className: \"start-btn\",\n        onClick: this.stop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"STOP\"), React.createElement(\"p\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Score: \", this.state.snakeLength - 3));\n    }\n  }]);\n\n  return Snake;\n}(React.Component);\n\nReactDOM.render(React.createElement(Snake, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:\\Google Диск\\Projects\\React\\snake\\src\\index.js"],"names":["React","ReactDOM","Field","Snake","props","changeDirection","key","state","direction","setState","start","console","log","field","xSize","ySize","headX","headY","snakeLength","snake","x","y","length","appleX","appleY","isStarted","Math","round","random","generateApple","i","data","className","isSnake","push","value","concat","timerID","setInterval","move","makeSnake","drawField","clearInterval","event","keyCode","bind","stop","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Field} from \"./Field\";\n\nclass Snake extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [],\n            xSize: 10,\n            ySize: 10,\n            headX: 7,\n            headY: 5,\n            snakeLength: 3,\n            snake: {x: [7, 8, 9], y: [5, 5, 5], length: 3},\n            direction: \"\",\n            appleX: 2,\n            appleY: 1,\n            isStarted: false\n        };\n    }\n\n    generateApple() {\n        this.setState({\n            appleX: Math.round(Math.random() * (this.state.xSize - 1)),\n            appleY: Math.round(Math.random() * (this.state.ySize - 1))\n        });\n    }\n\n    changeDirection = (key) => {\n        switch (key) {\n            case 37:\n                if (this.state.direction !== \"right\") {\n                    this.setState({\n                        direction: \"left\"\n                    });\n                    break;\n                }\n            case 38:\n                this.setState({\n                    direction: \"up\"\n                });\n                break;\n            case 39:\n                this.setState({\n                    direction: \"right\"\n                });\n                break;\n            case 40:\n                this.setState({\n                    direction: \"down\"\n                });\n                break;\n            default:\n                this.setState({\n                    direction: \"left\"\n                });\n        }\n        this.start();\n        console.log(this.state.direction);\n    };\n\n    move() {\n        switch (this.state.direction) {\n            case \"left\":\n                this.setState({\n                    headX: this.state.headX - 1\n                });\n                break;\n            case \"right\":\n                this.setState({\n                    headX: this.state.headX + 1\n                });\n                break;\n            case \"up\":\n                this.setState({\n                    headY: this.state.headY - 1\n                });\n                break;\n            case \"down\":\n                this.setState({\n                    headY: this.state.headY + 1\n                });\n                break;\n            default:\n                this.setState({\n                    headX: this.state.headX,\n                    headY: this.state.headY,\n                });\n        }\n\n        if (this.state.headX === this.state.appleX && this.state.headY === this.state.appleY) {\n            this.setState({\n                snakeLength: this.state.snakeLength + 1\n            });\n            this.state.snake.length = this.state.snakeLength;\n            this.generateApple();\n        }\n\n        if (this.state.headX < 0) this.setState({headX: this.state.xSize - 1});\n        if (this.state.headX > this.state.xSize - 1) this.setState({headX: 0});\n        if (this.state.headY < 0) this.setState({headY: this.state.ySize - 1});\n        if (this.state.headY > this.state.ySize - 1) this.setState({headY: 0});\n    }\n\n    isSnake(x, y) {\n        for (let i = 0; i < this.state.snake.length; i++) {\n            if (this.state.snake.x[i] === x && this.state.snake.y[i] === y) return true;\n        }\n        return false;\n    }\n\n    makeSnake() {\n        for (let i = this.state.snake.length - 1; i >= 0; i--) {\n            if (i > 0) {\n                this.state.snake.x[i] = this.state.snake.x[i-1];\n                this.state.snake.y[i] = this.state.snake.y[i-1];\n            }\n            if (i === 0) {\n                this.state.snake.x[i] = this.state.headX;\n                this.state.snake.y[i] = this.state.headY;\n            }\n        }\n    }\n\n    drawField() {\n        let data = [];\n        let className = \"\";\n        for (let y = 0; y < this.state.ySize; y++) {\n            data[y] = [];\n            for (let x = 0; x < this.state.xSize; x++) {\n                if (this.isSnake(x, y)) {\n                    className = \"snake\"\n                } else if (x === this.state.appleX && y === this.state.appleY) {\n                    className = \"apple\"\n                } else {\n                    className = \"pixel\"\n                }\n                data[y].push({key: x + \"\" + y, className: className, value: x + \":\" + y});\n            }\n        }\n        this.setState({\n            field: this.state.field.concat(data)\n        });\n    }\n\n    start() {\n        if (!this.state.isStarted) {\n            this.timerID = setInterval(() => {\n                this.setState({\n                    field: [],\n                    isStarted: true\n                });\n                this.move();\n                this.makeSnake();\n                this.drawField();\n            }, 500)\n        }\n    }\n\n    stop() {\n        if (this.state.isStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                isStarted: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" onKeyDown={(event) => this.changeDirection(event.keyCode)}>\n                <Field field={this.state.field}/>\n                <button className=\"start-btn\" onClick={this.start.bind(this)}>START</button>\n                <button className=\"start-btn\" onClick={this.stop.bind(this)}>STOP</button>\n                <p className=\"score\">Score: {this.state.snakeLength - 3}</p>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<Snake/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}